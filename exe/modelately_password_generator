#!/usr/bin/env ruby

require "getoptlong"
require "modelately_password_generator"

def usage
  puts <<-"EOL"
    #{File.basename($0)}: modelately password generator
      -h, --help:   show this document.
      -l, --length: specify password length. (default 16)
      -n, --num:    specify password num. (default 10)
      -a, --add:    specify additional charactor. (default "-_")

EOL
end

psr = GetoptLong.new
psr.set_options(
  ['-l', '--length', GetoptLong::REQUIRED_ARGUMENT],
  ['-n', '--num',    GetoptLong::REQUIRED_ARGUMENT],
  ['-a', '--add',    GetoptLong::REQUIRED_ARGUMENT],
  ['-h', '--help',   GetoptLong::NO_ARGUMENT]
)

opts = {}

psr.each do |optname, optarg|
  case optname
  when '-n', '--num'
    opts[:num] = optarg.to_i
  when '-l', '--length'
    opts[:length] = optarg.to_i
  when '-a', '--add'
    opts[:additional] = optarg
  when '-h', '--help'
    usage
    exit(0)
  end
end

puts ModelatelyPasswordGenerator::ModelatelyPasswordGenerator.new(**opts).generate
